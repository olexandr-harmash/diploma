// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using diploma.Estimation.API.Infrastructure;

#nullable disable

namespace Estimation.API.Infrastructure.Migrations
{
    [DbContext(typeof(EstimationContext))]
    [Migration("20240505054136_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("diploma.Estimation.API.Model.Criterion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("Criterions");
                });

            modelBuilder.Entity("diploma.Estimation.API.Model.Estimate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Estimations");
                });

            modelBuilder.Entity("diploma.Estimation.API.Model.EstimateCriterion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CriterionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EstimateId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EstimateId1")
                        .HasColumnType("uuid");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CriterionId");

                    b.HasIndex("EstimateId");

                    b.HasIndex("EstimateId1");

                    b.ToTable("EstimateCriterions");
                });

            modelBuilder.Entity("diploma.Estimation.API.Model.EstimateCriterion", b =>
                {
                    b.HasOne("diploma.Estimation.API.Model.Criterion", "Criterion")
                        .WithMany()
                        .HasForeignKey("CriterionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("diploma.Estimation.API.Model.Estimate", null)
                        .WithMany("Criterions")
                        .HasForeignKey("EstimateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("diploma.Estimation.API.Model.Estimate", "Estimate")
                        .WithMany()
                        .HasForeignKey("EstimateId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Criterion");

                    b.Navigation("Estimate");
                });

            modelBuilder.Entity("diploma.Estimation.API.Model.Estimate", b =>
                {
                    b.Navigation("Criterions");
                });
#pragma warning restore 612, 618
        }
    }
}
